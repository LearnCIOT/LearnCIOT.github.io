<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Water on Tutorial for CIoT Open Data Applications</title>
    <link>https://LearnCIOT.github.io/en/tags/water/</link>
    <description>Recent content in Water on Tutorial for CIoT Open Data Applications</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language><atom:link href="https://LearnCIOT.github.io/en/tags/water/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>3.1. Basic Data Access Methods</title>
      <link>https://LearnCIOT.github.io/en/ch3/ch3.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://LearnCIOT.github.io/en/ch3/ch3.1/</guid>
      <description>Table Of Contents What is pyCIOT? pyCIOT Basics Installation Import Package Data Access Air Quality Data Get all project codes: Air().get_source() Get all stations: Air().get_station() Get data of a station: Air().get_data() Water Resource Data Get all project codes: Water().get_source() Get all stations: Water().get_station() Get data of a station: Water().get_data() Earthquake Data Get all project codes: Quake().get_source() Get all stations: Quake().get_station() Get data of a station: Quake().get_data() Get data of an earthquake eventQuake().</description>
    </item>
    <item>
      <title>4.1. Time Series Data Processing</title>
      <link>https://LearnCIOT.github.io/en/ch4/ch4.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://LearnCIOT.github.io/en/ch4/ch4.1/</guid>
      <description>Table Of Contents Goal Package Installation and Importing Data Access Air Quality Data Water Level Data Meteorological Data Data Visualization Data Resample Moving Average Multi-line Charts Calendar Heatmap Data Quality Inspection Outlier Detection Change Point Detection) Missing Data Handling Data Decomposition References Time series data is data formed in the order of appearance in time. Usually, the time interval in the data will be the same (for example, one data every five minutes, or one data per hour), and the application fields are quite wide, such as financial information, space engineering, signal processing, etc.</description>
    </item>
    <item>
      <title>5.1. Geospatial Filtering</title>
      <link>https://LearnCIOT.github.io/en/ch5/ch5.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://LearnCIOT.github.io/en/ch5/ch5.1/</guid>
      <description>Table Of Contents Intersect Buffer Multi-ring buffer Distance matrix Brief Summary In the past, if we’re curious about geospatial phenomena such as air quality, earthquakes or floods, we rely on information provided by public sectors or experts to grasp the spatial domain and intensity of phenomena.
Suppose that we want to see the air quality in neighborhoods of our house, one important information source would be the Taiwan Air Quality Monitoring Network run by Environmental Protection Administration Executive Yuan.</description>
    </item>
    <item>
      <title>6.1. Machine Learning Preliminaries</title>
      <link>https://LearnCIOT.github.io/en/ch6/ch6.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://LearnCIOT.github.io/en/ch6/ch6.1/</guid>
      <description>Table Of Contents Preamble Classification Clustering Package Installation and Importing Case 1: Location Type Classification of Air Quality Sensors Data Cleansing Outlier removal Train data and test data Using the pre-built Sklearn models Case 2: Clustering of Air Quality Sensors Data download and preprocessing Dynamic Time Warping (DTW) K-Mean clustering Correlation between data clusters and geographical locations Correlation between data clusters and wind directions Case 3: Clustering and Classification Application of Water and Meteorological Data Data download and preprocessing Correlation of flood sensors and rain gauges Data clustering to find highly correlated rain gauges Data classification to predict flooding by rainfall data References Preamble In the earlier sections, we&amp;rsquo;ve explored the extensive open data available through Civil IoT Taiwan.</description>
    </item>
    <item>
      <title>4.2. Time Series Data Forecast</title>
      <link>https://LearnCIOT.github.io/en/ch4/ch4.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://LearnCIOT.github.io/en/ch4/ch4.2/</guid>
      <description>Table Of Contents Goal Package Installation and Importing Data Access Air Quality Data Water Level Data Meteorological Data Data Preprocessing Stationary Evaluation Data Forecast ARIMA SARIMAX auto_arima Prophet LSTM Holt-Winter Comparison References The previous chapter has introduced various methods of processing time series data, including visual presentation of data, decomposition of time series data, etc. In this chapter, we will further extract the characteristics of these data and use various predictive models to find the law of the data and predict the future.</description>
    </item>
    <item>
      <title>5.2. Geospatial Analysis</title>
      <link>https://LearnCIOT.github.io/en/ch5/ch5.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://LearnCIOT.github.io/en/ch5/ch5.2/</guid>
      <description>Table Of Contents Voronoi diagram Convex hull Clustering Kernel density Spatial interpolation Inverse Distance Weighting Kriging Nearest neighbor Interpolation Contour Profile References Environmental microsensors scattered throughout our surroundings play a crucial role in gathering information. This data aids us in making informed decisions and taking appropriate actions. A key aspect of this process involves understanding the spatial relationships between sensor stations when analyzing their data. These station locations can reveal geometric patterns or form spatial clusters.</description>
    </item>
  </channel>
</rss>