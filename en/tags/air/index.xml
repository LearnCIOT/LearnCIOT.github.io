<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Air on Tutorial for CIoT Open Data Applications</title>
    <link>https://LearnCIOT.github.io/en/tags/air/</link>
    <description>Recent content in Air on Tutorial for CIoT Open Data Applications</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language><atom:link href="https://LearnCIOT.github.io/en/tags/air/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>3.1. Basic Data Access Methods</title>
      <link>https://LearnCIOT.github.io/en/ch3/ch3.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://LearnCIOT.github.io/en/ch3/ch3.1/</guid>
      <description>Table Of Contents What is pyCIOT? pyCIOT Basics Installation Import Package Data Access Air Quality Data Get all project codes: Air().get_source() Get all stations: Air().get_station() Get data of a station: Air().get_data() Water Resource Data Get all project codes: Water().get_source() Get all stations: Water().get_station() Get data of a station: Water().get_data() Earthquake Data Get all project codes: Quake().get_source() Get all stations: Quake().get_station() Get data of a station: Quake().get_data() Get data of an earthquake eventQuake().</description>
    </item>
    <item>
      <title>4.1. Time Series Data Processing</title>
      <link>https://LearnCIOT.github.io/en/ch4/ch4.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://LearnCIOT.github.io/en/ch4/ch4.1/</guid>
      <description>Table Of Contents Goal Package Installation and Importing Data Access Air Quality Data Water Level Data Meteorological Data Data Visualization Data Resample Moving Average Multi-line Charts Calendar Heatmap Data Quality Inspection Outlier Detection Change Point Detection) Missing Data Handling Data Decomposition References Time series data is data formed in the order of appearance in time. Usually, the time interval in the data will be the same (for example, one data every five minutes, or one data per hour), and the application fields are quite wide, such as financial information, space engineering, signal processing, etc.</description>
    </item>
    <item>
      <title>5.1. Geospatial Filtering</title>
      <link>https://LearnCIOT.github.io/en/ch5/ch5.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://LearnCIOT.github.io/en/ch5/ch5.1/</guid>
      <description>Table Of Contents Intersect Buffer Multi-ring buffer Distance matrix Brief Summary In the past, if we’re curious about geospatial phenomena such as air quality, earthquakes or floods, we rely on information provided by public sectors or experts to grasp the spatial domain and intensity of phenomena.
Suppose that we want to see the air quality in neighborhoods of our house, one important information source would be the Taiwan Air Quality Monitoring Network run by Environmental Protection Administration Executive Yuan.</description>
    </item>
    <item>
      <title>6.1. Machine Learning Preliminaries</title>
      <link>https://LearnCIOT.github.io/en/ch6/ch6.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://LearnCIOT.github.io/en/ch6/ch6.1/</guid>
      <description>Table Of Contents Preamble Classification Clustering Package Installation and Importing Case 1: Location Type Classification of Air Quality Sensors Data Cleansing Outlier removal Train data and test data Using the pre-built Sklearn models Case 2: Clustering of Air Quality Sensors Data download and preprocessing Dynamic Time Warping (DTW) K-Mean clustering Correlation between data clusters and geographical locations Correlation between data clusters and wind directions Case 3: Clustering and Classification Application of Water and Meteorological Data Data download and preprocessing Correlation of flood sensors and rain gauges Data clustering to find highly correlated rain gauges Data classification to predict flooding by rainfall data References Preamble In the previous chapters, we have introduced the rich open data content of Civil IoT Taiwan.</description>
    </item>
    <item>
      <title>7.1. QGIS Application</title>
      <link>https://LearnCIOT.github.io/en/ch7/ch7.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://LearnCIOT.github.io/en/ch7/ch7.1/</guid>
      <description>Table Of Contents Goal QGIS Basic Operation Data Preparation GeoJSON Output Data Filter and Change Colors Export Thematic Maps Example 2: Distribution of Emergency Shelters Conclusion References QGIS is a free geographic information system. In addition to presenting the data collected by users in the form of geographic data, users can also process, analyze and integrate geospatial data through QGIS, and draw thematic maps. In this article, we will use QGIS to assist in the analysis and presentation of PM2.</description>
    </item>
    <item>
      <title>3.2. Data Access under Spatial or Temporal Conditions</title>
      <link>https://LearnCIOT.github.io/en/ch3/ch3.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://LearnCIOT.github.io/en/ch3/ch3.2/</guid>
      <description>Table Of Contents Data access under temporal conditions Data access under spatial conditions Case study: Is the air quality here worse than there? Import data Remove invalid data Calculate distance Pandas package Results References This article will access the data of the Civil IoT Taiwan project from the perspective of time and space, and carry out a simple implementation with the theme of air quality monitoring. It will covers the following topics:</description>
    </item>
    <item>
      <title>4.2. Time Series Data Forecast</title>
      <link>https://LearnCIOT.github.io/en/ch4/ch4.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://LearnCIOT.github.io/en/ch4/ch4.2/</guid>
      <description>Table Of Contents Goal Package Installation and Importing Data Access Air Quality Data Water Level Data Meteorological Data Data Preprocessing Stationary Evaluation Data Forecast ARIMA SARIMAX auto_arima Prophet LSTM Holt-Winter Comparison References The previous chapter has introduced various methods of processing time series data, including visual presentation of data, decomposition of time series data, etc. In this chapter, we will further extract the characteristics of these data and use various predictive models to find the law of the data and predict the future.</description>
    </item>
    <item>
      <title>5.2. Geospatial Analysis</title>
      <link>https://LearnCIOT.github.io/en/ch5/ch5.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://LearnCIOT.github.io/en/ch5/ch5.2/</guid>
      <description>Table Of Contents Voronoi diagram Convex hull Clustering Kernel density Spatial interpolation Inverse Distance Weighting Kriging Nearest neighbor Interpolation Contour Profile References Microsensors that are widespread in the environment help us obtain environmental information, making decisions and taking actions accordingly. Therefore, it’s fundamental for us to clearly understand the spatial relationships between stations when analyzing data of stations. Apart from that the location of stations itself may form certain geometric structures or spatial clusters, we can also estimate the values where there’s no stations according to the location of stations and their value differences.</description>
    </item>
    <item>
      <title>6.2. Anomaly Detection</title>
      <link>https://LearnCIOT.github.io/en/ch6/ch6.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://LearnCIOT.github.io/en/ch6/ch6.2/</guid>
      <description>Table Of Contents Anomaly Detection Framework Types of abnormal events Possible causes of abnormal events Case Study Package Installation and Importing Initialization and Data Access Find nearby sensors Time slicing every five minutes Average the sensing values of nearby sensors every time slice Abnormal event judgements Implementation of the Malfunction Detection module Implementation of the Real-time Emission Detection module Implementation of the Device Ranking module References Anomaly Detection Framework Multiple large-scale micro air quality monitoring systems have been successfully deployed in different countries and cities.</description>
    </item>
    <item>
      <title>7.2. Tableau Application</title>
      <link>https://LearnCIOT.github.io/en/ch7/ch7.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://LearnCIOT.github.io/en/ch7/ch7.2/</guid>
      <description>Table Of Contents Goal Data Source Tableau Basic Operation Data Import Worksheet Introduction Tableau Example 1: Spatio-temporal Distribution of Air Quality Data Spatial Distribution Graph Time Series Graph Tableau Example 2: Disaster Notification Dashboard Disaster data format conversion Dashboard size Add worksheets to a dashboard Add interactions Interacting multiple worksheet Additional information Story Conclusion References Data visualization transforms data into graphical formats, making it easier to understand and interpret. Different graph types are better suited for various data sets.</description>
    </item>
    <item>
      <title>4.3. Time Series Data Clustering</title>
      <link>https://LearnCIOT.github.io/en/ch4/ch4.3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://LearnCIOT.github.io/en/ch4/ch4.3/</guid>
      <description>Table Of Contents Goal Package Installation and Importing Data Access and Preprocessing Data Clustering Fast Fourier Transform Wavelet Transform References Cluster analysis is a commonly used data processing method in data science, and its primary purpose is to find similar clusters in the data. After cluster analysis, data with similar attributes are clustered together for ease of use, and researchers can perform deeper analysis and processing on data with similar characteristics.</description>
    </item>
    <item>
      <title>6.3. Joint Data Calibration</title>
      <link>https://LearnCIOT.github.io/en/ch6/ch6.3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://LearnCIOT.github.io/en/ch6/ch6.3/</guid>
      <description>Table Of Contents Package Installation and Importing Initialization and Data Access Data Preprocessing Calibration Model Establishment and Validation Best Calibration Model of the Day Calibration Results References In this article, we will take the air quality data in Civil IoT Taiwan as an example to introduce how to allow two levels of air quality sensing data to be systematically and dynamically calibrated through data science methods. At the same time, with the results of data fusion, different deployment projects can work together to create a more comprehensive air quality sensing result.</description>
    </item>
    <item>
      <title>7.3. Leafmap Applications</title>
      <link>https://LearnCIOT.github.io/en/ch7/ch7.3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://LearnCIOT.github.io/en/ch7/ch7.3/</guid>
      <description>Table Of Contents Package Installation and Importing Data Access Leafmap Basics Basic Data Presentation Cluster Data Presentation Change Leafmap Basemap Integrate OSM Resources Heatmap Presentation Split Window Presentation Leafmap for Web Applications Conclusion References In earlier sections, we showed you how to analyze geographic data using programming and how to use GIS (Geographic Information System) software for basic analysis and display of this data. Now, we&amp;rsquo;re going to teach you how to use Leafmap in Python for GIS tasks, and how to develop websites with Streamlit.</description>
    </item>
  </channel>
</rss>