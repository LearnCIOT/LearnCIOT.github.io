<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>beginner on Tutorial for CIoT Open Data Applications</title>
    <link>https://LearnCIOT.github.io/levels/beginner/</link>
    <description>Recent content in beginner on Tutorial for CIoT Open Data Applications</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language><atom:link href="https://LearnCIOT.github.io/levels/beginner/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>1. 教學網站簡介</title>
      <link>https://LearnCIOT.github.io/ch1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://LearnCIOT.github.io/ch1/</guid>
      <description>1. 教學網站簡介 Table Of Contents 環境感知 開放資料 民生公共物聯網 民生公共物聯網資料服務平台 參考資料 環境感知 自古以來，人類對自然界的好奇心始於農業文明時期，那時的人們會仰望天空，觀察星象。到了西元十六世紀的文藝復興時代，哥白尼根據當時的天文觀測資料提出「地動說」，伽利略和牛頓則接續其思路，為現代科學奠定了基石。在當今社會，隨著半導體技術的快速進步，我們使用的感知生活環境的工具日趨多樣、精確和微型。當這些微型感測器結合了資訊科技的演進，以及網際網路的即時資料傳輸，我們獲得了前所未有的大量觀測數據。
面對這浩如瀚海的數據，科學家正努力從中分析環境變化的模式，研究這些模式與災害之間的連結。他們的目的是為了更好地預測災害、提高我們的生活品質、強化災害防救效果，並促進人與環境的和諧共生。這不僅是現今個人、社群、國家乃至全球共同關心的議題，也是努力追求美好、永續生活環境的核心目標。
開放資料 「開放資料」是一種策略，將各式電子化資料 —— 無論是文字、數據、圖片、影片還是聲音等，都經過特定的程序和格式整理，然後公開提供，並鼓勵各方自由使用。依據 Open Knowledge Foundation 的定義，要被認定為開放資料，必須符合以下幾項要件：
開放授權或開放狀態 (Open license or status)：開放資料應屬於公眾領域，且須以開放授權的方式釋出，確保不受額外的使用限制。 自由存取 (Access)：人們應能在網路上輕鬆取得開放資料。儘管在某些合理情境下，一次性的取用費用或特定的使用條款可能是允許的。 機器可讀 (Machine readability)：開放資料的格式應該容易讓電腦進行讀取、分析和修改。 開放格式 (Open format)：資料必須採用一種開放的標準格式，確保使用者可以透過免費或開放原始碼的軟體來取得和使用它。 隨著開放原始碼、開放政府以及開放科學等理念的普及，開放資料已經逐步成為政府和科學界制定政策和進行學術研究的重要原則。特別是近來受到廣大關注的環境感知物聯網，因為其廣泛分布於公共空間，加上所監測的環境信息與大眾的日常生活密切相關，更被視為最受期待的開放資料來源之一。
目前網路上常見的開放資料多使用 JSON、CSV 或 XML 的資料格式：
JSON：全名為 Javascript Object Notation，這是一個輕量化的資料交換格式。它由屬性和值所組成，不僅機器友善，人們也能輕鬆閱讀和解讀。這格式常被選用於網站的資料展示、傳輸和存儲。
CSV：全名為 Comma-Separated Values，正如其名，它是一種以文字方式儲存表格式資料的方法。在這格式中，每筆資料都是一行，而每個屬性則是一列。當資料儲存時，所有的屬性都會按照特定的順序進行排列，並用特定的符號分隔。這種格式廣泛應用於軟體的資料匯入 / 匯出、網路資料傳送以及歷史資料存儲。
XML：全名為 Extensible Markup Language，它基於標準通用標記語言 (Standard Generalized Markup Language, SGML) 而來，是一個可擴展的標記式語言。它允許使用者自訂他們需要的標籤，適合建立包含結構化資料的文件，並廣泛用於文件的呈現和網上資料交換。
目前臺灣常用的開放資料，多彙整於下列平台：
政府資料開放平臺 (https://data.gov.tw/) 氣象資料開放平臺 (https://opendata.cwb.gov.tw/devManual/insrtuction) 環保署環境資料開放平臺 (https://data.epa.gov.tw/) 民生公共物聯網 鑑於環境感知的關鍵性及相應技術的快速進展，政府為更貼近民眾的生活與提供綜合性的公共服務，確認了四大民生議題：空氣品質、地震、水資源和災防。於是，在民國 106 年的「前瞻基礎建設 - 數位建設」計畫中，集結國科會、交通部、經濟部、內政部、環保署、中央研究院、農委會的資源，共同推動了一個跨部門的大型政府計畫－「民生公共物聯網」。此計畫融合大數據、人工智慧和物聯網技術，開發各式智慧生活服務系統，協助政府及民眾一同迎戰環境的變遷挑戰。此外，考量到不同的使用者群像，如政府部門、學術界、產業和大眾，這計畫也旨在促進政府的智慧治理、支持學界和產業的發展，並提升民眾的生活質量。</description>
    </item>
    <item>
      <title>2. 整體課程前言</title>
      <link>https://LearnCIOT.github.io/ch2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://LearnCIOT.github.io/ch2/</guid>
      <description>2. 整體課程前言 在這個主題中，我們介紹民生公共物聯網資料應用教材的整體架構，以及所使用到的程式語言 Python 和開發平台 Google Colab。除了概念上的描述外，我們也提供由淺入深的大量延伸學習資源，讓有興趣的讀者，可以依據需求自行進行更進一步地探索學習。
2.1. 課程架構說明民生公共物聯網資料應用的整體架構介紹
2.2. 課程軟體工具簡介民生公共物聯網資料應用所使用到的程式語言 Python 和開發平台 Google Colab 簡介
Previous Next &amp;nbsp; &amp;nbsp; Page: / &amp;nbsp; &amp;nbsp; Download </description>
    </item>
    <item>
      <title>3. 資料取用</title>
      <link>https://LearnCIOT.github.io/ch3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://LearnCIOT.github.io/ch3/</guid>
      <description>3. 資料取用 在這個主題中，我們介紹如何透過本教材提供的教材工具，使用簡易的 Python 語法，直接取用民生公共物聯網開放資料平台的資料。為了更深入的透過範例介紹不同的資料存取方法，我們將此主題切分出兩個單元，進行更深入的介紹：
3.1. 基本資料存取方法我們介紹如何取用民生公共物聯網開放資料平台中，有關水、空、地、災不同面向單一測站的最新一筆感測資料，如何獲取所有測站的列表，以及如何獲取所有測站當下最新的一筆感測資料。
3.2. 存取特定時空條件的資料我們介紹如何在民生公共物聯網資料平台中獲取特定時間或時間段的資料，以及特定地理區域的資料，並透過簡單的案例演示其應用。
Previous Next &amp;nbsp; &amp;nbsp; Page: / &amp;nbsp; &amp;nbsp; Download </description>
    </item>
    <item>
      <title>4. 時間維度資料分析</title>
      <link>https://LearnCIOT.github.io/ch4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://LearnCIOT.github.io/ch4/</guid>
      <description>4. 時間維度資料分析 在這個主題中，我們針對物聯網資料所具備的時序特性，介紹一系列的時間維度資料分析方法。透過民生公共物聯網資料平台的使用，我們將發展下列三項單元，進行更深入的介紹。
4.1. 時間序列資料處理我們使用民生公共物聯網資料平台的感測資料，引導讀者了解移動式平均 (Moving Average) 的使用方法，以及進行時序資料的週期性分析，並進而將時序資料拆解出長期趨勢、季節變動、循環變動與殘差波動，同時套用既有的 Python 語言套件，進行變點檢測 (Change Point Detection) 與異常值檢測 (Outlier Detection)，用以檢視現有民生公共物聯網資料，並探討其背後所可能隱含的意義。
4.2. 時間序列資料預測我們使用民生公共物聯網資料平台的感測資料，套用現有的 Python 資料科學套件 (例如 scikit-learn、Kats 等)，用動手實作的方式，比較各種套件所內建的不同資料預測模型的使用方法與預測結果，用製圖的方式進行資料呈現，並且探討不同的資料集與不同時間解析度的資料預測，在真實場域所代表的意義，以及可能衍生的應用。
4.3. 時間序列屬性分群我們介紹較為進階的資料分群分析。我們首先介紹兩種時間序列的特徵擷取方法，分別是傅立葉轉換 (Fourier Transform) 和小波轉換 (Wavelet Transform)，並且以簡要的方式說明兩種轉換方式之異同。我們介紹兩種不同的時間序列比較方法，分別是幾何距離 (Euclidean Distance) 與動態時間規整 (Dynamic Time Warping, DTW) 距離，並根據所使用的距離函數，套用既有的分群演算法套件，並且探討不同的資料集與不同時間解析度的資料分群，在真實場域所代表的意義，以及可能衍生的應用。
Previous Next &amp;nbsp; &amp;nbsp; Page: / &amp;nbsp; &amp;nbsp; Download </description>
    </item>
    <item>
      <title>5. 空間維度資料分析</title>
      <link>https://LearnCIOT.github.io/ch5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://LearnCIOT.github.io/ch5/</guid>
      <description>5. 空間維度資料分析 在這個主題中，我們針對物聯網資料所具備的地理空間特性，介紹一系列的空間維度資料處理與資料分析方法。透過民生公共物聯網資料平台的使用，我們將發展下列兩項單元，進行更深入的介紹。
5.1. 地理空間篩選我們使用民生公共物聯網資料平台的地震和防救災資料，套疊從政府開放資料平臺取得的行政區域界線圖資，篩選特定行政區域內的資料，以及產製套疊地圖後的資料分布位置圖片檔案。除此之外，我們同時示範如何套疊特定的幾何拓撲區域，並將套疊的成果輸出成檔案與進行繪圖動作。
5.2. 地理空間分析我們使用民生公共物聯網資料平台的感測資料，介紹較為進階的地理空間分析，利用測站資訊中的 GPS 位置座標，首先利用尋找最大凸多邊形 (Convex Hull) 的套件，框定感測器所涵蓋的地理區域；接著套用 Voronoi Diagram 的套件，將地圖上的區域依照感測器的分布狀況，切割出每個感測器的勢力範圍。針對感測器與感測器之間的區域，我們利用空間內插的方式，套用不同的空間內插演算法，根據感測器的數值，進行空間地圖上的填值，並產製相對應的圖片輸出。
Previous Next &amp;nbsp; &amp;nbsp; Page: / &amp;nbsp; &amp;nbsp; Download </description>
    </item>
    <item>
      <title>6. 資料應用</title>
      <link>https://LearnCIOT.github.io/ch6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://LearnCIOT.github.io/ch6/</guid>
      <description>6. 資料應用 在這個主題中，我們將著重在存取民生公共物聯網開放資料後的衍生應用，透過其他函式庫套件與分析演算法的導入，強化民生公共物聯網開放資料的價值與應用服務。我們預計發展的單元內容包含：
6.1. 機器學習初探我們使用空品和水位類別資料，結合天氣觀測資料，利用資料集的時間欄位進行連結，帶入機器學習的套件，進行資料分類與資料分群的分析。我們將示範機器學習的標準流程，並且介紹如何透過資料分類進一步進行資料預測，以及如何透過資料分群進行對資料進一步的深入探究。
6.2. 異常資料偵測我們使用空品類別資料，示範台灣微型空品感測資料上常用的感測器異常偵測演算法，以做中學的方式，一步步從資料準備，特徵擷取，到資料分析、統計與歸納，重現異常偵測演算法的原理與實作過程，讓讀者體驗如何透過疊加基本的資料分析方法，逐步達成進階且實用的資料應用服務。
6.3. 感測器聯合校正我們使用空品類別資料，示範台灣微型空品感測器與官方測站進行動態校正的演算法，以做中學的方式，一步步從資料準備，特徵擷取，到機器學習、資料分析、統計與歸納，重現感測器動態校正模型演算法的原理與實作過程，讓讀者體驗如何透過疊加基本的資料分析與機器學習步驟，逐步達成進階且實用的資料應用服務。
Previous Next &amp;nbsp; &amp;nbsp; Page: / &amp;nbsp; &amp;nbsp; Download </description>
    </item>
    <item>
      <title>7. 系統整合應用</title>
      <link>https://LearnCIOT.github.io/ch7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://LearnCIOT.github.io/ch7/</guid>
      <description>7. 系統整合應用 在這個主題中，我們將著重在民生公共物聯網開放資料與其他應用軟體的整合應用，透過其他應用軟體的專業功能，進一步深化與發揮民生公共物聯網開放資料的價值。
7.1. QGIS 應用我們介紹使用 QGIS 系統進行的地理資料呈現，並且以Civil IoT Taiwan 的資料當作範例，利用點擊拖拉的方式，進行地理空間分析。同時我們也討論 QGIS 軟體的優缺點與使用時機。
7.2. Tableau 應用我們介紹使用 Tableau 工具呈現民生公共物聯網的開放資料，並使用空品資料和災害通報資料進行兩個範例演示。我們介紹如何使用工作表、儀表板和文本來建立互動式的資料視覺化系統，方便使用者近一步深入探索。我們同時提供豐富的參考資料供使用者學習參考。
7.3. Leafmap 應用我們介紹 leafmap 套件在民生公共物聯網資料平台中使用不同類型數據進行地理信息表示和空間分析的能力，並演示了 leafmap 和 streamlit 套件的結合共同構建 Web GIS 的應用。透過跨域與跨工具的資源整合，將能拓展讀者對數據分析和信息服務未來的想像。
Previous Next &amp;nbsp; &amp;nbsp; Page: / &amp;nbsp; &amp;nbsp; Download </description>
    </item>
    <item>
      <title>教學影片</title>
      <link>https://LearnCIOT.github.io/video/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://LearnCIOT.github.io/video/</guid>
      <description>教學影片 Table Of Contents 民生公共物聯網 資料應用網站簡介影片 研習工作坊教學影片 (2022/10/22 台北) 研習工作坊教學影片 (2022/11/5 台中) 研習工作坊教學影片 (2022/11/27 台南) 民生公共物聯網 資料應用網站簡介影片 1 教學網站簡介 2 整體課程前言 3 資料取用 4 時間維度資料分析 5 空間維度資料分析 6 資料應用 7 系統整合應用 結尾 完整版 (53:25) 研習工作坊教學影片 (2022/10/22 台北) 整體課程與教學網站簡介 資料取用 時間維度資料分析 空間維度資料分析 研習工作坊教學影片 (2022/11/5 台中) 整體課程與教學網站簡介 資料取用 系統整合應用：Leafmap 系統整合應用：Tableau 研習工作坊教學影片 (2022/11/27 台南) 整體課程與教學網站簡介 資料取用 資料應用與機器學習 系統整合應用：QGIS </description>
    </item>
    <item>
      <title>2.1. 課程架構說明</title>
      <link>https://LearnCIOT.github.io/ch2/ch2.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://LearnCIOT.github.io/ch2/ch2.1/</guid>
      <description>本套課程包含「教學網站簡介」、「整體課程前言」、「資料取用方法」、「時間維度資料分析」、「空間維度資料分析」、「資料應用案例」與「系統整合案例」等七大主題，其具體內容分別說明如下：
教學網站簡介 我們介紹這整個計畫的核心 - 「民生公共物聯網」，介紹台灣過去幾年在「民生公共物聯網」的各項成果，以及「民生公共物聯網開放資料」涵蓋水、空、地、災四大面向資料，所能帶來在日常生活上的各項應用與服務。我們同時呈現各項既有的文章、影片與成功案例，讓學員與閱讀者能深刻體認「民生公共物聯網」對民生用途的重要性。
整體課程前言 我們介紹這整套課程的架構，以及本套課程所使用的 Python程式語言與 Google Colab程式開發平台，透過淺顯的文字介紹，引導學員快速了解整體課程的架構，並且提供豐富的外部資源清單，讓有興趣與需求的學員，能更進一步深入探索相關的技術。
資料取用方法 我們介紹如何透過我們開發的工具，可以使用簡易的 Python 語法，直接取用民生公共物聯網開放資料平台的資料，並且根據不同的需求，切割出兩個單元進行更深入的介紹：
基本資料存取方法：我們介紹如何取用民生公共物聯網開放資料平台中，有關水、空、地、災不同面向單一測站的最新一筆感測資料，如何獲取所有測站的列表，以及如何獲取所有測站當下最新的一筆感測資料。 存取特定時空條件的資料：我們介紹如何獲取民生公共物聯網資料平台中某測站特定時間或時間區段的資料、尋找最鄰近的測站當下最新的一筆資料，以及尋找某位置座標周圍固定區域所有測站當下最新的一筆資料等應用。 在這兩個單元中，除了介紹資料的存取方法外，我們也穿插基本的探索式資料分析 (Exploratory Data Analysis, EDA) 方法，藉由常用的統計方式描述資料不同面向的資料特性，並繪製簡易的圖表，讓讀者透過動手做、做中學的方式，體驗掌握資料與資料分析的成就感。
時間維度資料分析 我們針對物聯網資料所具備的時序特性，設計三個單元介紹一系列的時間維度資料分析方法。
時間序列資料處理：我們使用民生公共物聯網資料平台的感測資料，引導讀者了解移動式平均 (Moving Average) 的使用方法，以及進行時序資料的週期性分析，並進而將時序資料拆解出長期趨勢、季節變動、循環變動與隨機波動四大部分，同時套用既有常見的 Python 語言套件，進行變點檢測 (Change Point Detection) 與異常值檢測 (Outlier Detection)，用以檢視現有民生公共物聯網資料中，有關變點檢測與異常值檢測，其背後所可能隱含的意義。 時間序列資料預測：我們使用民生公共物聯網資料平台的感測資料，套用現有的 Python 資料科學套件（例如 scikit-learn、Kats 等），用動手實作的方式，比較各種套件所內建的不同資料預測模型的使用方法與預測結果，用製圖的方式進行資料呈現，並且探討不同的資料集與不同時間解析度的資料預測，在真實場域所代表的意義，以及可能衍生的應用。 時間序列屬性分群：我們介紹較為進階的資料分群分析。我們首先介紹兩種時間序列的特徵擷取方法，分別是傅立葉轉換 (Fourier Transform) 和小波轉換 (Wavelet Transform)，並且以簡要的方式說明兩種轉換方式之異同。我們介紹兩種不同的時間序列比較方法，分別是幾何距離 (Euclidean Distance) 與動態時間規整 (Dynamic Time Warping, DTW) 距離，並根據所使用的距離函數，套用既有的分群演算法套件，探討資料集在不同時間解析度所代表的意義，以及可能衍生的應用。 空間維度資料分析 我們針對物聯網資料所具備的地理空間特性，根據不同的分析需求與應用，介紹一系列的空間維度資料處理與資料分析方法。
地理空間篩選：我們使用民生公共物聯網資料平台的地震和防救災資料，套疊從政府開放資料平臺取得的行政區域界線圖資，篩選特定行政區域內的資料，以及產製套疊地圖後的資料分布位置圖片檔案。除此之外，我們同時示範如何套疊特定的幾何拓撲區域，並將套疊的成果輸出成檔案與進行繪圖動作。 地理空間分析：我們使用民生公共物聯網資料平台的感測資料，介紹較為進階的地理空間分析，利用測站資訊中的 GPS 位置座標，首先利用尋找最大凸多邊形 (Convex Hull) 的套件，框定感測器所涵蓋的地理區域；接著套用 Voronoi Diagram 的套件，將地圖上的區域依照感測器的分布狀況，切割出每個感測器的勢力範圍。針對感測器與感測器之間的區域，我們利用空間內插的方式，套用不同的空間內插演算法，根據感測器的數值，進行空間地圖上的填值，並產製相對應的圖片輸出。 資料應用案例 我們在這個主題中，將著重在存取民生公共物聯網開放資料後的衍生應用，透過其他函式庫套件與分析演算法的導入，強化民生公共物聯網開放資料的價值與應用服務。我們依照由淺入深的原則，依序發展下列三個子主題：
機器學習初探：我們使用空品和水位類別資料，結合天氣觀測資料，利用資料集的時間欄位進行連結，帶入機器學習的套件，進行感測值的預測分析。我們將示範機器學習的標準流程，並且介紹預測分析的成效評估方法，以及如何避免機器學習容易產生的偏差 (Bias) 與過度學習 (Overfitting) 問題。 感測器異常偵測：我們使用空品類別資料，示範台灣微型空品感測資料上常用的感測器異常偵測演算法，以做中學的方式，一步步從資料準備，特徵擷取，到資料分析、統計與歸納，重現異常偵測演算法的原理與實作過程，讓讀者體驗如何透過疊加基本的資料分析方法，逐步達成進階且實用的資料應用服務。 感測器動態校正模型：我們使用空品類別資料，示範台灣微型空品感測器與官方測站進行動態校正的演算法，以做中學的方式，一步步從資料準備，特徵擷取，到機器學習、資料分析、統計與歸納，重現感測器動態校正模型演算法的原理與實作過程，讓讀者體驗如何透過疊加基本的資料分析與機器學習步驟，逐步達成進階且實用的資料應用服務。 系統整合案例 在這個主題中，我們著重在民生公共物聯網開放資料與其他應用軟體的整合應用，透過其他應用軟體的專業功能，進一步深化與發揮民生公共物聯網開放資料的價值。我們發展的單元內容包含：</description>
    </item>
    <item>
      <title>3.1. 基本資料存取方法</title>
      <link>https://LearnCIOT.github.io/ch3/ch3.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://LearnCIOT.github.io/ch3/ch3.1/</guid>
      <description>Table Of Contents pyCIOT API 是什麼 pyCIOT API 使用方法 下載 pyCIOT 模組套件 使用 pyCIOT 模組 pyCIoT API 獲取資料方式 空氣資料存取 獲取專案代碼 Air().get_source() 獲取所有測站列表 Air().get_station() 獲取測站資料 Air().get_data() 水源資料存取 獲取專案代碼 Water().get_source() 獲取所有測站列表 Water().get_station() 獲取測站資料 Water().get_data() 地震資料存取 獲取專案代碼 Quake().get_source() 獲取地震監測站列表 Quake().get_station() 獲取地震資料 Quake().get_data() 獲取單一地震資料Quake().get_data() 天氣資料存取 獲取專案代碼 Weather().get_source() 獲取所有測站列表 Weather().get_station() 獲取測站資料 Weather().get_data() 影像資料存取 獲取專案代碼 CCTV().get_source() 獲取影像資料 CCTV().get_data() 災難警示資料存取 獲取災情示警 Disaster().get_alert() 獲取災情通報歷史資料 Disaster().get_notice() 參考資料 本章節涵蓋 pyCIOT API 的使用方法，以及空氣、水源、地震、天氣、影像資料、以及災難警示資料的基本存取方法。包含單一測站的最新一筆感測資料、獲取所有測站的列表，以及如何獲取所有測站當下最新的一筆感測資料。
本章節需要讀者有基本的終端機操作能力及接觸過 Python 程式基本語法。
pyCIOT API 是什麼 政府開放資料現已有非常多種類的資料及窗口讓我們查詢，而不同的窗口有各自不同的資料存取方式。即便這些資料逐漸使用開放授權，但在進行資料搜集時，因為下載取得資料的方式各有差異，若要將這些資料整理會變得極為麻煩。本函式庫（python 模組）為了解決窗口不一的困難，將所有有提供 API 的政府民生開放資料的開放搜集至此，嘗試讓開放資料獲取門檻降低，降低自動化及二手資料處理成本。****</description>
    </item>
    <item>
      <title>4.1. 時間序列資料處理</title>
      <link>https://LearnCIOT.github.io/ch4/ch4.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://LearnCIOT.github.io/ch4/ch4.1/</guid>
      <description>Table Of Contents 章節目標 套件安裝與引用 讀取資料 空品資料 水位資料 氣象資料 資料視覺化 (Visualization) 重新採樣 (resample) 移動平均 (moving average) 多曲線圖 日曆熱力圖 資料品質檢測與處理 離群值偵測 (Outlier detection) 改變點偵測 (Change point detection) 缺失資料 (missing data) 處理 資料分解(Decomposition) 參考資料 時間序列資料是依照時間上發生的先後順序形成的資料，通常在資料上的時間間隔會一樣（例如：五分鐘一筆資料、一小時一筆資料），應用的領域相當廣泛，如：金融資訊、太空工程、訊號處理等，在分析上也有許多統計相關的工具可以使用。 同時也可以發現時序資料是很貼近日常生活的，隨著全球氣候變遷的日益加劇，這幾年全球的平均氣溫越來越高，在夏天時更是讓人熱到非常有感，也越來越難以忍受；又或是在一年中某些季節的空氣品質往往特別差，或者某些時間的空氣品質往往比其他時間來的差等。如果想要更加了解這些生活環境的改變，以及其對應的感測器數值是如何變化的，就會運用到時間序列資料的分析，也就是觀察資料與時間的關係，進而得出結果。本章節將會使用三種資料（空氣品質、水資源、氣象）示範。
章節目標 使用作圖工具觀察時序資料 檢測與處理時序資料 分解時序資料得到趨勢與週期性 套件安裝與引用 在本章節中，我們將會使用到 pandas, matplotlib, numpy, seaborn, statsmodels, warnings 等套件，這些套件由於在我們使用的開發平台 Colab 上皆已預先安裝好，因此不需要再另行安裝。然而，我們還會另外使用兩個 Colab 並未預先安裝好的套件：kats 和 calplot，需使用下列的方式自行安裝：
# 升級 pip，確保使用最新版 !pip install --upgrade pip # 安裝 Kats 套件，版本指定為 0.1，以及相依的 ax-platform 和 statsmodels 套件 !</description>
    </item>
    <item>
      <title>5.1. 地理空間篩選</title>
      <link>https://LearnCIOT.github.io/ch5/ch5.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://LearnCIOT.github.io/ch5/ch5.1/</guid>
      <description>Table Of Contents 交集 (Intersect) 緩衝區 (Buffer) 多重緩衝區 (Multi-ring buffer) 距離矩陣 (Distance Matrix) 小結 民生公共物聯網的測站都有其空間位置，由於同一區域內常有類似的環境因子，所以它們的感測數值也會具有類似的起伏趨勢，而這也就是地理學的第一定律：“All things are related, but nearby things are more related than distant things.” (Waldo R. Tobler)
此外，單一測站的感測數據有可能因為局部干擾因子的影響，而產生較大的起伏，所以為進一步確認數據的可信度，我們會需要以單一測站為中心，依照其所屬的行政區或是指定距離 (半徑)，選取鄰近的測站ID與數值，並將其以表單或地圖的方式呈現，以便進行比對。
這個章節中，我們會利用環保署的空品測站、氣象局的局屬測站以及水利署在各縣市佈建的淹水感測器，示範如何利用地理空間篩選測站，並以其「位置」與「數值」為基礎，轉化成可利用的空間資訊。
import matplotlib.pyplot as plt import seaborn as sns import pandas as pd import numpy as np import urllib.request import ssl import json #install geopython libraries !apt install gdal-bin python-gdal python3-gdal #install python3-rtree - Geopandas requirement !apt install python3-rtree #install geopandas !</description>
    </item>
    <item>
      <title>7.1. QGIS 應用</title>
      <link>https://LearnCIOT.github.io/ch7/ch7.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://LearnCIOT.github.io/ch7/ch7.1/</guid>
      <description>Table Of Contents 章節目標 QGIS操作說明 範例一：空品測站分佈圖 資料匯入 產生 GeoJSON 檔案 篩選資料與改變資料點位顏色 將成果輸出成主題式地圖 範例二：避難所分佈圖 QGIS總結 Reference QGIS 是一套免費的地圖資料管理系統，除了可以將使用者蒐集到的資料以地理資續的方式呈現外，使用者也可透過 QGIS 來處理、分析及整合地理空間資料，並繪製主題地圖。在這個章節中，我們將利用 QGIS 來協助我們分析並呈現從民生公共物聯網上所得到的 PM2.5 資料，並在分析完成後將其結果輸出成主題式地圖以供判讀。我們同時也示範如何結合民生公共物聯網的災防資料，透過 QGIS 系統繪製防災避難所分佈圖，方便民眾自行查詢離家最近的防災避難所。
註釋 本文所操作之 QGIS 版本為 3.16.8，惟本文所使用之功能皆為該軟體之基本功能，若使用其他版本軟體，應仍可正常操作。
章節目標 如何將取得的資料導入 QGIS 在 QGIS 使用前面章節所介紹的地理空間分析功能 (Intersection、Buffer) 將結果輸出成一張主題地圖供別人觀賞 QGIS操作說明 在執行 QGIS 軟體後，可以看到下方的操作介面，除了中間區域的資料框外，上方為標準工具列，提供各式不同的基本操作工具與功能；左方有兩個子區域，分別為資料目錄視窗與圖層；右邊則為分析工具列，提供各式不同的分析工具。
以下，我們將使用兩個簡單的範例，透過民生公共物聯網的空品資料與災防資料，介紹 QGIS 的基本操作。
範例一：空品測站分佈圖 資料匯入 資料來源：民生公共物聯網歷史資料 https://history.colife.org.tw/#/?cd=%2F空氣品質%2F中研院_校園空品微型感測器
在這個部分會先介紹如何將資料成功導入到 QGIS 內。由於有些資料在儲存時，會把一張資料表拆開成多張不同的資料表，因此我們在進行分析時，必須要特別留意是否手邊的資料是否有這種情況，並將資料重新結合成原來的一張資料表，以下介紹資料結合的方法：
資料導入
首先，我們要先介紹如何將從民生公共物聯網歷史資料直接下載下來的 csv 檔導入到 QGIS。由於資料中有中文，導入時會顯示亂碼，所以採用導入方法為 Layer（位於最上方選單） &amp;gt; Add Layer &amp;gt; Add Delimited Text Layer，匯入介面如下圖： 資料結合 (Join)
由於原始資料將 PM2.</description>
    </item>
    <item>
      <title>關於我們</title>
      <link>https://LearnCIOT.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://LearnCIOT.github.io/about/</guid>
      <description>本網站為基於臺灣民生公共物聯網各項開放資料，所撰寫之資料應用說明與範例。本網站所使用之各項開放資料，其授權規定請參考原始網站之說明內容；本網站所提供程式範例中，所使用到的 Python 語言套件與套裝軟體，其使用授權，請參考各套件與軟體之相關網頁的說明；本網站所提供之文章內容，採用 CC-BY (https://creativecommons.org/licenses/by/3.0/) 的創用 CC 授權。
本網站的指導單位、執行單位、主持人與相關團隊資訊如下：
指導單位：國家實驗研究院 科技政策研究與資訊中心 執行單位：中央研究院 資訊科學研究所 專案主持人：陳伶志 專家顧問團隊： 洪智傑，國立中興大學資訊管理系 汪立本，國立台灣大學土木工程系 黃仁暐，國立成功大學電機工程系 黃維嘉，LASS 社群 劉致灝，國家災害防救科技中心 洪翠屏，臺北市立育成高級中學 高慧君，臺北市立南港高級中學 編輯團隊：吳姃家、沈姿雨、洪軾凱、高慧君、陳宏穎、彭昱齊、黃仁暐、鄭宇伸、鍾明光、羅泉恆 審查團隊： 劉嘉凱，智庫驅動股份有限公司 許武龍，LASS社群 謝欣成，國立中央大學化學系 劉育宏，高雄市立前鎮高中 柯建華，基隆市立基隆高中 洪挺晏，國立臺灣師範大學附屬高中 </description>
    </item>
    <item>
      <title>2.2. 課程軟體工具簡介</title>
      <link>https://LearnCIOT.github.io/ch2/ch2.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://LearnCIOT.github.io/ch2/ch2.2/</guid>
      <description>Table Of Contents 程式語言 - Python 開發平台 – Google Colab 參考資料 程式語言 - Python 針對本套課程的主題著重在民生公共物聯網資料應用，本套課程將以目前資料科學界所常用的程式語言 Python 為主要程式語言，利用淺顯易懂的示範方式，帶領讀者透過做中學的方式，逐步進入各章節的主題內涵，並能獲得民生公共物聯網資料應用的第一手經驗，以及未來舉一反三應用於其他資料科學主題的能力。整體來說，Python 程式語言能在短時間內迅速成為資料科學界最熱門的程式語言，主要有下列三大優勢：
學習的門檻較低：在文字式的程式語言來說，相較於其它語言（例如 C、Java），Python 程式碼較少特殊符號，字面上看起來比較接近日常生活中常見的英文文章，如果掌握了 Python 語法和程式執行的邏輯，再加上英文單字能力，就能夠很容易理解 Python 程式碼語意，因此學習 Python 的門檻較低！ 各式各樣的套件庫：Python 經過三十多年的發展，儼然壯大成一個生態系，除了基本語法外，還可以加裝各式各樣的套件，就能進階變形為各種的工具，適合用來解決五花八門的問題。透過本計畫量身訂制一個 Python 套件 (CIOT)，可以更快速地提高學習的天花板，從而了解如何更方便地應用民生公共物聯網資料。 閱讀理解程式碼較適合自學：隨著套件的使用，閱讀理解程式碼的能力比起程式碼寫作能力更為重要！如果要駕馭現有的套件，必須先看得懂使用手冊，然後再排列組合去拼湊成解決問題的程式碼。所以問題解決的模式，會是「在現有的程式高手基礎上去堆疊程式，而不是從零開始寫 Python 程式碼」；尤其是培養閱讀理解程式碼的能力，比較適合用自學模式來進行，當逐漸熟悉 Python 的邏輯後，學習閱讀程式碼就有機會變得跟閱讀故事書一樣有趣喔！ 也由於 Python 語言具備上述的各項優點，Python 語言目前已成為資料科學上最普遍被使用的程式語言，更成為許多程式設計學習者所使用的第一個程式語言。因此，除了坊間各種 Python 語言的教學書籍外，在網際網路上也可以找到多實用的學習資源，值得對 Python 語言有興趣的讀者，進一步主動的進行探索與學習。
免費教學課程 用 Python 做商管程式設計（一），孔令傑，Coursera (https://zh-tw.coursera.org/learn/pbc1) Python 入門教學課程，彭彭的課程 (https://www.youtube.com/watch?v=wqRlKVRUV_k&amp;amp;list=PL-g0fdC5RMboYEyt6QS2iLb_1m7QcgfHk) Python for Everybody Specialization, Coursera (https://www.coursera.org/specializations/python) Python for Data Science, AI &amp;amp; Development, Coursera (https://www.coursera.org/learn/python-for-applied-data-science-ai) Introduction to Python Programming, Udemy (https://www.</description>
    </item>
    <item>
      <title>7.2. Tableau 應用</title>
      <link>https://LearnCIOT.github.io/ch7/ch7.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://LearnCIOT.github.io/ch7/ch7.2/</guid>
      <description>Table Of Contents 章節目標 資料來源 Tableau 基本操作說明 資料導入 工作表 (Worksheet) 簡介 Tableau 應用範例ㄧ：空品資料時空分佈圖 繪製空間分布圖 (地理資訊地圖) 繪製時間分布圖(折線圖) Tableau 應用範例二：災情通報資料儀表板 (Dashboard) 災情資料格式轉換 儀錶板大小設定 將工作表加入儀錶板 加入互動式按鈕 讓同一個互動按鈕作用於多個工作表 加入其他資訊 文本 (Story) 總結 參考資料 在資料分析中，將資料視覺化往往可以協助我們對資料有更進一步的理解。而在將資料圖像化時，不同的資料類型在進行資料圖像化時所使用的圖表類型也有所不同，例如在呈現有經緯度座標的資料時，多半會使用地圖類的圖表，而在呈現時間序列資料時，則可以使用折線圖、直方圖等。然而，許多的資料常常具備不只一種特性，如民生公共物聯網的感測器資料就同時具備了經緯座標及時間序列，因此在呈現時，往往需要用到不只一種圖表才能呈現資料的意涵。而本章節要來介紹一款十分方便的軟體 Tableau，來幫助我們呈現上述複雜的資料型態。
Tableau 是一個提供使用者容易上手的視覺化分析平台，除了可以用其來快速製作各式圖表外，其 Dashboard 更是可以讓使用者更加方便地呈現不同的圖表資料；此外，Dashboard 還可以讓讀者與圖表進行互動，除了可以幫助讀者更加輕鬆快速地理解資料外，同時也讓資料分析變得更加地容易。Tableau 原本是一款付費的商業軟體，不過它也有提供免費版的 Tableau Public，來供大家使用。然而要注意的是，因為是 &amp;ldquo;Public&amp;rdquo; 所以利用它所製作出來的成果均會被公開。
註釋 本文所操作之 Tableau Public 版本為 Tableau Desktop Public Edition (2022.2.2 (20222.22.0916.1526) 64 位)，惟本文所使用之功能皆為該軟體之基本功能，若使用其他版本軟體，應仍可正常操作。
章節目標 知道如何將資料導入 Tableau 進行圖像化呈現 利用工作表 (Worksheet) 來繪製出分析圖表 利用儀錶板 (Dashboard) 及文本 (Story) 來設計出互動式圖表/簡報 資料來源 民生公共物聯網歷史資料 - 空品資料 - 中研院_校園空品微型感測 (https://history.</description>
    </item>
  </channel>
</rss>